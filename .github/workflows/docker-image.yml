name: CI/CD Docker

# 트리거를 수행할 브랜치를 지정합니다.
on:
  push:
    branches: [ main ]

# 환경설정
env:
    VERSION: ${{ github.sha }}

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 16
     
      - name: node project manager clean & install 
        run: npm ci
        
      #- name: node test
      #  run: npm test
        
      - name: node build
        run: npm run build

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-world-vue:${{ env.VERSION }} .

      - name: DockerHub 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Docker Hub 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hello-world-vue:${{ env.VERSION }}

  deploy:
    needs: build  # build 후에 실행되도록 정의
    name: Deploy
    runs-on: [ self-hosted, label-go2 ] # AWS ./configure에서 사용할 label명
    steps:
    - name: docker login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    # my_bridge_network 사용하도록 지정
    - name: Docker run
      run: |
        sudo docker stop hello-app1 && sudo docker rm hello-app1 
        sudo docker run -d --name hello-app1 --restart always ${{ secrets.DOCKER_USERNAME }}/hello-world-vue:${{ env.VERSION }}
        #사용되지 않는 도커이미지를 삭제한다
        sudo docker image prune -af
